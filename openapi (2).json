{
  "openapi": "3.0.0",
  "info": {
    "title": "Spaceship.com",
    "contact": {
      "email": "support@spaceship.com",
      "url": "https://www.spaceship.com/about/contact-us/"
    },
    "description": "# Spaceship API\n\n## Authentication\n\nSpaceship API uses a combination of API key and API secret for authentication.\n\n### API key setup\nYou can generate your API key and secret in [API Manager](https://www.spaceship.com/application/api-manager/). Use the \"New API key\" button to set up a new API key and follow the guide to get started.  \nAfter the key setup has been successful, it should appear on the API Manager application page.\n\n### API key usage\nAs shown in the example below, API consumers shall pass a valid API key and a corresponding API secret in the X-API-Secret headers.  \nYou do not need to encode the API key and the API secret.\n```bash\ncurl -X GET '/api/resource' \\\n-H 'X-Api-Secret: F3brvQluT4s8aDB7PeFBH6qKHfH2xTKTneCjZbq3z2w7rj2vV6n_zhSvvJoQ' \\\n-H 'X-Api-Key: JdIS8QYFMZpVKupJtdc3'\n```\n\n### Permissions \n\n - <b id=\"scopes/domains:read\">domains:read</b> - Read domain information and check configuration\n- <b id=\"scopes/domains:write\">domains:write</b> - Manage domains and domain settings\n- <b id=\"scopes/domains:transfer\">domains:transfer</b> - Transfer domains in and out\n- <b id=\"scopes/contacts:write\">contacts:write</b> - Save contact details\n- <b id=\"scopes/contacts:read\">contacts:read</b> - Read contact details\n- <b id=\"scopes/dnsrecords:write\">dnsrecords:write</b> - Write DNS resource records\n- <b id=\"scopes/dnsrecords:read\">dnsrecords:read</b> - Read DNS resource records",
    "version": "1.0.0",
    "x-logo": {
      "url": "https://spaceship-cdn.com/spaceship-api-doc-assets/logo.svg"
    }
  },
  "servers": [
    {
      "url": "https://spaceship.dev/api",
      "description": "The main server for the Spaceship External API",
      "variables": {}
    }
  ],
  "security": [
    {
      "apiKey": [],
      "apiSecret": []
    }
  ],
  "tags": [
    {
      "name": "Domains"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Contacts attributes"
    },
    {
      "name": "DNS records"
    }
  ],
  "paths": {
    "/v1/contacts": {
      "put": {
        "operationId": "saveDetails",
        "summary": "Save contact details",
        "description": "Save details for the contact and return the generated contact ID.\n\n### Required Permissions \n\n - <a href=\"#scopes/contacts:write\">contacts:write</a>\n\n### Rate Limits \n\n * The limit for saving contact details is 300 requests per user, within 300 seconds.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts.SaveResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDetails"
              }
            }
          },
          "description": "Key-value pairs with contact details"
        },
        "x-scopes": [
          "contacts:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/contacts';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    firstName: 'John',\n    lastName: 'Doe',\n    organization: 'My Company',\n    email: 'admin@example.com',\n    address1: '286 King St.',\n    address2: 'string',\n    city: 'San Francisco',\n    country: 'US',\n    stateProvince: 'CA',\n    postalCode: '94107',\n    phone: '+1.123456789',\n    phoneExt: '256',\n    fax: '+1.123456789',\n    faxExt: '256',\n    taxNumber: '123456789'\n  })\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/contacts', [\n  'body' => '{\"firstName\":\"John\",\"lastName\":\"Doe\",\"organization\":\"My Company\",\"email\":\"admin@example.com\",\"address1\":\"286 King St.\",\"address2\":\"string\",\"city\":\"San Francisco\",\"country\":\"US\",\"stateProvince\":\"CA\",\"postalCode\":\"94107\",\"phone\":\"+1.123456789\",\"phoneExt\":\"256\",\"fax\":\"+1.123456789\",\"faxExt\":\"256\",\"taxNumber\":\"123456789\"}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/contacts\"\n\npayload = {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"organization\": \"My Company\",\n    \"email\": \"admin@example.com\",\n    \"address1\": \"286 King St.\",\n    \"address2\": \"string\",\n    \"city\": \"San Francisco\",\n    \"country\": \"US\",\n    \"stateProvince\": \"CA\",\n    \"postalCode\": \"94107\",\n    \"phone\": \"+1.123456789\",\n    \"phoneExt\": \"256\",\n    \"fax\": \"+1.123456789\",\n    \"faxExt\": \"256\",\n    \"taxNumber\": \"123456789\"\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/contacts \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"organization\": \"My Company\",\n  \"email\": \"admin@example.com\",\n  \"address1\": \"286 King St.\",\n  \"address2\": \"string\",\n  \"city\": \"San Francisco\",\n  \"country\": \"US\",\n  \"stateProvince\": \"CA\",\n  \"postalCode\": \"94107\",\n  \"phone\": \"+1.123456789\",\n  \"phoneExt\": \"256\",\n  \"fax\": \"+1.123456789\",\n  \"faxExt\": \"256\",\n  \"taxNumber\": \"123456789\"\n}\n'"
          }
        ]
      }
    },
    "/v1/contacts/attributes": {
      "put": {
        "operationId": "saveAttributes",
        "summary": "Save contact attributes",
        "description": "<div style=\"font-size: 1.8em; color: #f06700; font-weight:bold; padding-bottom: 20px; line-height: 1.4em\">\nThis API is under development and currently returns an HTTP 501 status. \n<p style=\"font-size: 0.7em;\">The provided information is for preliminary familiarization only. Once the API is implemented, this notice will be removed.</p>\n</div> \n Save contact attributes and return the generated contact ID.\n\n### Required Permissions \n\n - <a href=\"#scopes/contacts:write\">contacts:write</a>\n\n### Rate Limits \n\n * The limit for saving contact attribute details is 300 requests per user, within 300 seconds.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contactId"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts attributes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDetails"
              }
            }
          },
          "description": "Details"
        },
        "x-scopes": [
          "contacts:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/contacts/attributes';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({type: 'string'})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/contacts/attributes', [\n  'body' => '{\"type\":\"string\"}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/contacts/attributes\"\n\npayload = { \"type\": \"string\" }\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/contacts/attributes \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '{\"type\":\"string\"}'"
          }
        ]
      }
    },
    "/v1/contacts/attributes/{contact}": {
      "get": {
        "operationId": "readAttributeDetails",
        "summary": "Read attribute details",
        "description": "<div style=\"font-size: 1.8em; color: #f06700; font-weight:bold; padding-bottom: 20px; line-height: 1.4em\">\nThis API is under development and currently returns an HTTP 501 status. \n<p style=\"font-size: 0.7em;\">The provided information is for preliminary familiarization only. Once the API is implemented, this notice will be removed.</p>\n</div> \n Read attribute details by contact ID.\n\n### Required Permissions \n\n - <a href=\"#scopes/contacts:read\">contacts:read</a>\n\n### Rate Limits \n\n * The limit for listing contact attribute details is 5 requests per attribute, within 300 seconds.",
        "parameters": [
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "minLength": 27,
              "maxLength": 32,
              "pattern": "[a-zA-Z0-9]+",
              "description": "Contact ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDetails"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts attributes"
        ],
        "x-scopes": [
          "contacts:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/contacts/attributes/1ZdMXpapqp9sle5dl8BlppTJXAzf5';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/contacts/attributes/1ZdMXpapqp9sle5dl8BlppTJXAzf5', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/contacts/attributes/1ZdMXpapqp9sle5dl8BlppTJXAzf5\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url https://spaceship.dev/api/v1/contacts/attributes/1ZdMXpapqp9sle5dl8BlppTJXAzf5 \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/contacts/{contact}": {
      "get": {
        "operationId": "readDetails",
        "summary": "Read contact details",
        "description": "Read details of the contact by contact ID.\n\n### Required Permissions \n\n - <a href=\"#scopes/contacts:read\">contacts:read</a>\n\n### Rate Limits \n\n * The limit for listing contact details is 5 requests per contact, within 300 seconds.",
        "parameters": [
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "minLength": 27,
              "maxLength": 32,
              "pattern": "[a-zA-Z0-9]+",
              "description": "Contact ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDetails"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "x-scopes": [
          "contacts:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/contacts/1ZdMXpapqp9sle5dl8BlppTJXAzf5';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/contacts/1ZdMXpapqp9sle5dl8BlppTJXAzf5', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/contacts/1ZdMXpapqp9sle5dl8BlppTJXAzf5\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url https://spaceship.dev/api/v1/contacts/1ZdMXpapqp9sle5dl8BlppTJXAzf5 \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/dns/records/{domain}": {
      "put": {
        "operationId": "saveRecords",
        "summary": "Save resource records",
        "description": "Add custom DNS resource records or update TTL.\nRecords are matched using case-insensitive comparison, except for TXT records.\n\n### Required Permissions \n\n - <a href=\"#scopes/dnsrecords:write\">dnsrecords:write</a>\n\n### Rate Limits \n\n * The limit for saving resource record details is 300 requests per user, per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose resource records are being updated.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "DNS records"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Records.RecordsUpdateModel"
              },
              "examples": {
                "AAAA": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "address": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "ALIAS": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "aliasName": "@",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "A": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "address": "127.0.0.1",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "CAA": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "flag": 0,
                        "tag": "issue",
                        "value": "string",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "CNAME": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "cname": "@",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "HTTPS": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "port": "_8443",
                        "scheme": "_https",
                        "svcPriority": 1,
                        "targetName": "_443._https.www.example.com",
                        "svcParams": "",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "MX": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "exchange": "@",
                        "preference": 65535,
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "NS": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "nameserver": "@",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "PTR": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "pointer": "@",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "SRV": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "service": "string",
                        "protocol": "string",
                        "priority": 65535,
                        "weight": 65535,
                        "port": 1,
                        "target": "@",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "SVCB": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "port": "_443",
                        "scheme": "_tcp",
                        "svcPriority": 1,
                        "targetName": "_443._https.www.example.com",
                        "svcParams": "",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "TLSA": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "port": "_443",
                        "protocol": "_tcp",
                        "usage": 2,
                        "selector": 1,
                        "matching": 1,
                        "associationData": "7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                },
                "TXT": {
                  "value": {
                    "force": true,
                    "items": [
                      {
                        "type": "A",
                        "value": "v=spf1 a mx -all",
                        "name": "@",
                        "ttl": 3600
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-scopes": [
          "dnsrecords:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/dns/records/spaceship.com';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({force: true, items: [{type: 'A', name: '@', ttl: 3600}]})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/dns/records/spaceship.com', [\n  'body' => '{\"force\":true,\"items\":[{\"type\":\"A\",\"name\":\"@\",\"ttl\":3600}]}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/dns/records/spaceship.com\"\n\npayload = {\n    \"force\": True,\n    \"items\": [\n        {\n            \"type\": \"A\",\n            \"name\": \"@\",\n            \"ttl\": 3600\n        }\n    ]\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/dns/records/spaceship.com \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"force\": true,\n  \"items\": [\n    {\n      \"type\": \"A\",\n      \"name\": \"@\",\n      \"ttl\": 3600\n    }\n  ]\n}\n'"
          }
        ]
      },
      "delete": {
        "operationId": "deleteRecords",
        "summary": "Delete resource records",
        "description": "Delete custom DNS resource records.\nRecords matched using case-insensitive comparison, except for TXT records, which are case-sensitive.\n\n### Required Permissions \n\n - <a href=\"#scopes/dnsrecords:write\">dnsrecords:write</a>\n\n### Rate Limits \n\n * The limit for deleting resource record details is 300 requests per user, per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose resource records are being deleted.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "DNS records"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceRecordsListDeleteItem"
              },
              "examples": {
                "AAAA": {
                  "value": [
                    {
                      "type": "A",
                      "address": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
                      "name": "@"
                    }
                  ]
                },
                "ALIAS": {
                  "value": [
                    {
                      "type": "A",
                      "aliasName": "@",
                      "name": "@"
                    }
                  ]
                },
                "A": {
                  "value": [
                    {
                      "type": "A",
                      "address": "127.0.0.1",
                      "name": "@"
                    }
                  ]
                },
                "CAA": {
                  "value": [
                    {
                      "type": "A",
                      "flag": 0,
                      "tag": "issue",
                      "value": "string",
                      "name": "@"
                    }
                  ]
                },
                "CNAME": {
                  "value": [
                    {
                      "type": "A",
                      "cname": "@",
                      "name": "@"
                    }
                  ]
                },
                "HTTPS": {
                  "value": [
                    {
                      "type": "A",
                      "port": "_8443",
                      "scheme": "_https",
                      "svcPriority": 1,
                      "targetName": "_443._https.www.example.com",
                      "svcParams": "",
                      "name": "@"
                    }
                  ]
                },
                "MX": {
                  "value": [
                    {
                      "type": "A",
                      "exchange": "@",
                      "preference": 65535,
                      "name": "@"
                    }
                  ]
                },
                "NS": {
                  "value": [
                    {
                      "type": "A",
                      "nameserver": "@",
                      "name": "@"
                    }
                  ]
                },
                "PTR": {
                  "value": [
                    {
                      "type": "A",
                      "pointer": "@",
                      "name": "@"
                    }
                  ]
                },
                "SRV": {
                  "value": [
                    {
                      "type": "A",
                      "service": "string",
                      "protocol": "string",
                      "priority": 65535,
                      "weight": 65535,
                      "port": 1,
                      "target": "@",
                      "name": "@"
                    }
                  ]
                },
                "SVCB": {
                  "value": [
                    {
                      "type": "A",
                      "port": "_443",
                      "scheme": "_tcp",
                      "svcPriority": 1,
                      "targetName": "_443._https.www.example.com",
                      "svcParams": "",
                      "name": "@"
                    }
                  ]
                },
                "TLSA": {
                  "value": [
                    {
                      "type": "A",
                      "port": "_443",
                      "protocol": "_tcp",
                      "usage": 2,
                      "selector": 1,
                      "matching": 1,
                      "associationData": "7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069",
                      "name": "@"
                    }
                  ]
                },
                "TXT": {
                  "value": [
                    {
                      "type": "A",
                      "value": "v=spf1 a mx -all",
                      "name": "@"
                    }
                  ]
                }
              }
            }
          },
          "description": "Records"
        },
        "x-scopes": [
          "dnsrecords:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/dns/records/spaceship.com';\nconst options = {\n  method: 'DELETE',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify([{type: 'A', name: '@'}])\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('DELETE', 'https://spaceship.dev/api/v1/dns/records/spaceship.com', [\n  'body' => '[{\"type\":\"A\",\"name\":\"@\"}]',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/dns/records/spaceship.com\"\n\npayload = [\n    {\n        \"type\": \"A\",\n        \"name\": \"@\"\n    }\n]\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.delete(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request DELETE \\\n     --url https://spaceship.dev/api/v1/dns/records/spaceship.com \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n[\n  {\n    \"type\": \"A\",\n    \"name\": \"@\"\n  }\n]\n'"
          }
        ]
      },
      "get": {
        "operationId": "getResourceRecordsList",
        "summary": "Get domain resource records list",
        "description": "Retrieves a paginated list of resource records, allowing the use of query parameters to customize the response.\nThis operation is essential for efficiently managing large collections of resource records, enabling smooth navigation and retrieval without overloading the system with unnecessary data.\n\n### Required Permissions \n\n - <a href=\"#scopes/dnsrecords:read\">dnsrecords:read</a>\n\n### Rate Limits \n\n * The limit for getting the domain resource records list is 300 requests per user, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose resource records are being fetched.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": true,
            "description": "Number of response items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 500
            },
            "explode": false
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "Number of response items to skip",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "explode": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Specifies fields and order to sort the response items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "-type",
                  "name",
                  "-name"
                ]
              },
              "maxItems": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Resource records list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResourceRecord"
                      },
                      "maxItems": 100
                    },
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "example": 100,
                      "minimum": 0,
                      "maximum": 2147483647
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "DNS records"
        ],
        "x-scopes": [
          "dnsrecords:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/dns/records/spaceship.com?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/dns/records/spaceship.com?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/dns/records/spaceship.com?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url 'https://spaceship.dev/api/v1/dns/records/spaceship.com?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE' \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/domains": {
      "get": {
        "operationId": "getDomainList",
        "summary": "Get domain list",
        "description": "Retrieves a paginated list of domains, allowing the use of query parameters to customize the response.\nThis operation is essential for efficiently managing large collections of domains, enabling smooth navigation and retrieval without overloading the system with unnecessary data.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:read\">domains:read</a>\n\n### Rate Limits \n\n * The limit for fetching a domain list is 300 requests per user, within 300 seconds.",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "required": true,
            "description": "Number of response items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            },
            "explode": false
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "Number of response items to skip",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "explode": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Specifies fields and order to sort the response items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "unicodeName",
                  "-unicodeName",
                  "registrationDate",
                  "-registrationDate",
                  "expirationDate",
                  "-expirationDate"
                ]
              },
              "maxItems": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Domains list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DomainInfo"
                      },
                      "maxItems": 100
                    },
                    "total": {
                      "type": "integer",
                      "format": "int32",
                      "example": 100,
                      "minimum": 0,
                      "maximum": 2147483647
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/domains?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url 'https://spaceship.dev/api/v1/domains?take=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&orderBy=SOME_ARRAY_VALUE' \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/domains/{domain}": {
      "get": {
        "operationId": "getDomainInfo",
        "summary": "Get domain info",
        "description": "Get details of a specific domain.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:read\">domains:read</a>\n\n### Rate Limits \n\n * The limit for obtaining info for a domain is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "Domain name in ASCII format (A-label) whose details are to be fetched. The domain name must be provided in a fully qualified domain format.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domain info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInfo"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/domains/spaceship.com', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "delete": {
        "operationId": "domainDelete",
        "summary": "Delete the domain",
        "description": "<div style=\"font-size: 1.8em; color: #f06700; font-weight:bold; padding-bottom: 20px; line-height: 1.4em\">\nThis API is under development and currently returns an HTTP 501 status. \n<p style=\"font-size: 0.7em;\">The provided information is for preliminary familiarization only. Once the API is implemented, this notice will be removed.</p>\n</div> \n Delete the specific domain. Please note a refund will not be provided as part of this operation.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "Domain name in ASCII format (A-label) that must be deleted. The domain name must be provided in a fully qualified domain format.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com';\nconst options = {\n  method: 'DELETE',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('DELETE', 'https://spaceship.dev/api/v1/domains/spaceship.com', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request DELETE \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "post": {
        "operationId": "domainCreate",
        "summary": "Register the domain",
        "description": "<div style=\"font-size: 1.8em; color: #f06700; font-weight:bold; padding-bottom: 20px; line-height: 1.4em\">\nThis API is under development and currently returns an HTTP 501 status. \n<p style=\"font-size: 0.7em;\">The provided information is for preliminary familiarization only. Once the API is implemented, this notice will be removed.</p>\n</div> \n Register a specific domain.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain name for registration.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainCreateInfo"
              }
            }
          }
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com';\nconst options = {\n  method: 'POST',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    name: 'spaceship.com',\n    autoRenew: false,\n    privacyProtection: {contactForm: true, level: 'high'},\n    nameservers: {provider: 'custom', hosts: ['ns1.exampledomain.com', 'ns2.exampledomain.com']},\n    contacts: {\n      registrant: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n      admin: '1ZdMXpapqp9sle5dl8BlppTJXAzf6',\n      tech: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n      billing: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n      attributes: ['1ZdMXpapqp9sle5dl8BlppTJXAzf8']\n    }\n  })\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('POST', 'https://spaceship.dev/api/v1/domains/spaceship.com', [\n  'body' => '{\"name\":\"spaceship.com\",\"autoRenew\":false,\"privacyProtection\":{\"contactForm\":true,\"level\":\"high\"},\"nameservers\":{\"provider\":\"custom\",\"hosts\":[\"ns1.exampledomain.com\",\"ns2.exampledomain.com\"]},\"contacts\":{\"registrant\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"admin\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf6\",\"tech\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"billing\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"attributes\":[\"1ZdMXpapqp9sle5dl8BlppTJXAzf8\"]}}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com\"\n\npayload = {\n    \"name\": \"spaceship.com\",\n    \"autoRenew\": False,\n    \"privacyProtection\": {\n        \"contactForm\": True,\n        \"level\": \"high\"\n    },\n    \"nameservers\": {\n        \"provider\": \"custom\",\n        \"hosts\": [\"ns1.exampledomain.com\", \"ns2.exampledomain.com\"]\n    },\n    \"contacts\": {\n        \"registrant\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n        \"admin\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf6\",\n        \"tech\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n        \"billing\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n        \"attributes\": [\"1ZdMXpapqp9sle5dl8BlppTJXAzf8\"]\n    }\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request POST \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"name\": \"spaceship.com\",\n  \"autoRenew\": false,\n  \"privacyProtection\": {\n    \"contactForm\": true,\n    \"level\": \"high\"\n  },\n  \"nameservers\": {\n    \"provider\": \"custom\",\n    \"hosts\": [\n      \"ns1.exampledomain.com\",\n      \"ns2.exampledomain.com\"\n    ]\n  },\n  \"contacts\": {\n    \"registrant\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"admin\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf6\",\n    \"tech\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"billing\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"attributes\": [\n      \"1ZdMXpapqp9sle5dl8BlppTJXAzf8\"\n    ]\n  }\n}\n'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/autorenewal": {
      "put": {
        "operationId": "updateAutorenewal",
        "summary": "Update the domain autorenewal state",
        "description": "<div style=\"font-size: 1.8em; color: #f06700; font-weight:bold; padding-bottom: 20px; line-height: 1.4em\">\nThis API is under development and currently returns an HTTP 501 status. \n<p style=\"font-size: 0.7em;\">The provided information is for preliminary familiarization only. Once the API is implemented, this notice will be removed.</p>\n</div> \n Allows the modification of a domain's autorenewal state.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for updating the autorenewal state for a domain is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose autorenewal state is being updated.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains.DomainAutoRenewal"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domains.DomainAutoRenewal"
              }
            }
          },
          "description": "Provides the new autorenewal state for the domain."
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/autorenewal';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({isAutoRenewing: true})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/autorenewal', [\n  'body' => '{\"isAutoRenewing\":true}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/autorenewal\"\n\npayload = { \"isAutoRenewing\": True }\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/autorenewal \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"isAutoRenewing\": true\n}\n'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/contacts": {
      "put": {
        "operationId": "setDomainContacts",
        "summary": "Update domain contacts",
        "description": "Allows the modification of domain name contacts.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for updating contacts for a domain is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose contacts are being updated.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains.PutContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainContacts"
              }
            }
          },
          "description": "Provides the new set of contacts or the domain."
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/contacts';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({\n    registrant: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n    admin: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n    tech: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n    billing: '1ZdMXpapqp9sle5dl8BlppTJXAzf5',\n    attributes: ['1ZdMXpapqp9sle5dl8BlppTJXAzf3', '1ZdMXpapqp9sle5dl8BlppTJXAzf2']\n  })\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/contacts', [\n  'body' => '{\"registrant\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"admin\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"tech\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"billing\":\"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\"attributes\":[\"1ZdMXpapqp9sle5dl8BlppTJXAzf3\",\"1ZdMXpapqp9sle5dl8BlppTJXAzf2\"]}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/contacts\"\n\npayload = {\n    \"registrant\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"admin\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"tech\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"billing\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n    \"attributes\": [\"1ZdMXpapqp9sle5dl8BlppTJXAzf3\", \"1ZdMXpapqp9sle5dl8BlppTJXAzf2\"]\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/contacts \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"registrant\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n  \"admin\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n  \"tech\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n  \"billing\": \"1ZdMXpapqp9sle5dl8BlppTJXAzf5\",\n  \"attributes\": [\n    \"1ZdMXpapqp9sle5dl8BlppTJXAzf3\",\n    \"1ZdMXpapqp9sle5dl8BlppTJXAzf2\"\n  ]\n}\n'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/nameservers": {
      "put": {
        "operationId": "setDomainNameservers",
        "summary": "Update domain nameservers",
        "description": "Allows the modification of DNS settings for a specific domain by replacing its current nameservers with new ones.\nThis operation is crucial to ensure that your domain points to the correct DNS servers, which is essential for routing traffic accurately and implementing changes in DNS management.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for updating nameservers for a domain is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose nameservers should be updated. The domain name must be provided in a fully qualified domain format.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nameservers updated successfully. The response confirms that the domain's DNS settings have been modified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainNameServersConfigurationResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainNameServersConfigurationRequest"
              }
            }
          },
          "description": "Provides the new set of nameservers for the domain. The request must include a list of nameservers that will replace the existing ones."
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/nameservers';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({provider: 'custom', hosts: ['ns1.exampledomain.com', 'ns2.exampledomain.com']})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/nameservers', [\n  'body' => '{\"provider\":\"custom\",\"hosts\":[\"ns1.exampledomain.com\",\"ns2.exampledomain.com\"]}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/nameservers\"\n\npayload = {\n    \"provider\": \"custom\",\n    \"hosts\": [\"ns1.exampledomain.com\", \"ns2.exampledomain.com\"]\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/nameservers \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"provider\": \"custom\",\n  \"hosts\": [\n    \"ns1.exampledomain.com\",\n    \"ns2.exampledomain.com\"\n  ]\n}\n'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/personal-nameservers": {
      "get": {
        "operationId": "getDomainPersonalNameservers",
        "summary": "Get personal nameservers on a domain",
        "description": "Get the personal nameservers for a specific domain.\n\nPersonal nameservers are a combination of A records set for a specific host and glue records set for the domain on the registry.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:read\">domains:read</a>\n\n### Rate Limits \n\n * The limit for fetching personal nameservers for a domain is 5 requests per domain within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "A domain name whose details should be fetched. The domain name must be provided in a fully qualified domain format.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personal nameservers for the domain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalNameservers"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/personal-nameservers/{currentHost}": {
      "get": {
        "operationId": "getDomainPersonalNameserverHostInfo",
        "summary": "Get personal nameservers host configuration",
        "description": "<div style=\"font-size: 1.8em; color: #f06700; font-weight:bold; padding-bottom: 20px; line-height: 1.4em\">\nThis API is under development and currently returns an HTTP 501 status. \n<p style=\"font-size: 0.7em;\">The provided information is for preliminary familiarization only. Once the API is implemented, this notice will be removed.</p>\n</div> \n Get the configuration for personal nameservers associated with a specific domain.\n\nPersonal nameservers consist of A records for a specific host and glue records at the domain registry.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:read\">domains:read</a>",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "Domain name whose details should be fetched. The domain name must be provided in a fully qualified domain format.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          },
          {
            "name": "currentHost",
            "in": "path",
            "required": true,
            "description": "The host name part of the nameserver. For example, for `spaceship.dev` domain and `ns1.spaceship.dev` fully qualified name, the host is `ns1`.",
            "schema": {
              "type": "string",
              "example": "api.www",
              "minLength": 1,
              "maxLength": 255,
              "format": "hostname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameServers"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:read"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "put": {
        "operationId": "updateDomainPersonalNameserverHostInfo",
        "summary": "Update personal nameservers host configuration",
        "description": "Update the configuration for personal nameservers associated with a specific domain.\n\n**If the host in the request body differs from the host in the path, this operation will rename the host and update the IP addresses, making the old host return a 404.**\n\nPersonal nameservers are a combination of A records set for a specific host and glue records set for the domain on the registry.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for updating the personal nameservers for a domain is 10 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain name in fully qualified format whose nameserver configuration should be updated",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          },
          {
            "name": "currentHost",
            "in": "path",
            "required": true,
            "description": "The host name part of the nameserver. For example, for `spaceship.dev` domain and `ns1.spaceship.dev` fully qualified name, the host is `ns1`.",
            "schema": {
              "type": "string",
              "example": "api.www",
              "minLength": 1,
              "maxLength": 255,
              "format": "hostname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domain personal nameservers host is successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalNameserverRecord"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalNameserverRecord"
              }
            }
          }
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({host: 'ns1', ips: ['127.2.2.2', '12.22.22.21']})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www', [\n  'body' => '{\"host\":\"ns1\",\"ips\":[\"127.2.2.2\",\"12.22.22.21\"]}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www\"\n\npayload = {\n    \"host\": \"ns1\",\n    \"ips\": [\"127.2.2.2\", \"12.22.22.21\"]\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"host\": \"ns1\",\n  \"ips\": [\n    \"127.2.2.2\",\n    \"12.22.22.21\"\n  ]\n}\n'"
          }
        ]
      },
      "delete": {
        "operationId": "deleteDomainPersonalNameserverHostInfo",
        "summary": "Delete personal nameservers host configuration",
        "description": "Delete the personal nameservers host configuration for a specific domain.\n\nPersonal nameservers are a combination of A records set for a specific host and glue records set for the domain on the registry.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for deleting the personal nameservers host configuration for a domain is 10 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "Domain name in a fully qualified format whose personal nameservers host should be deleted",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          },
          {
            "name": "currentHost",
            "in": "path",
            "required": true,
            "description": "The host name part of the nameserver. For example, for `spaceship.dev` domain and `ns1.spaceship.dev` fully qualified name, the host is `ns1`.",
            "schema": {
              "type": "string",
              "example": "api.www",
              "minLength": 1,
              "maxLength": 255,
              "format": "hostname"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Domain personal nameservers host is successfully deleted"
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www';\nconst options = {\n  method: 'DELETE',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('DELETE', 'https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.delete(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request DELETE \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/personal-nameservers/api.www \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/privacy/email-protection-preference": {
      "put": {
        "operationId": "updateDomainEmailProtectionPreference",
        "summary": "Update domain email protection preference",
        "description": "Allows the modification of a domain's email protection preference.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for updating the domain email protection preference for a domain is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose email protection preference is being updated.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domains.DomainEmailProtectionPreference"
              }
            }
          },
          "description": "Provides the new email protection level for the domain."
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/privacy/email-protection-preference';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({contactForm: true})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/privacy/email-protection-preference', [\n  'body' => '{\"contactForm\":true}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/privacy/email-protection-preference\"\n\npayload = { \"contactForm\": True }\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/privacy/email-protection-preference \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '{\"contactForm\":true}'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/privacy/preference": {
      "put": {
        "operationId": "updateDomainPrivacyPreference",
        "summary": "Update domain privacy preference",
        "description": "Allows the modification of a domain's privacy preference.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:write\">domains:write</a>\n\n### Rate Limits \n\n * The limit for updating the privacy preference for a domain is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose privacy preference is being updated.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domains.DomainPrivacyPreference"
              }
            }
          },
          "description": "Provides the new privacy level for the domain."
        },
        "x-scopes": [
          "domains:write"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/privacy/preference';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({privacyLevel: 'high', userConsent: true})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/privacy/preference', [\n  'body' => '{\"privacyLevel\":\"high\",\"userConsent\":true}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/privacy/preference\"\n\npayload = {\n    \"privacyLevel\": \"high\",\n    \"userConsent\": True\n}\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/privacy/preference \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '\n{\n  \"privacyLevel\": \"high\",\n  \"userConsent\": true\n}\n'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/transfer/auth-code": {
      "get": {
        "operationId": "getAuthCode",
        "summary": "Get domain auth code",
        "description": "Get the domain's auth code, also known as EPP code, authorization code, transfer code or Auth-Info Code.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:transfer\">domains:transfer</a>\n\n### Rate Limits \n\n * The limit for obtaining auth codes is 5 requests per domain, within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose auth code is to be returned.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains.DomainAuthCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "x-scopes": [
          "domains:transfer"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/transfer/auth-code';\nconst options = {\n  method: 'GET',\n  headers: {'X-API-Key': 'REPLACE_KEY_VALUE', 'X-API-Secret': 'REPLACE_KEY_VALUE'}\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('GET', 'https://spaceship.dev/api/v1/domains/spaceship.com/transfer/auth-code', [\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/transfer/auth-code\"\n\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request GET \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/transfer/auth-code \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/v1/domains/{domain}/transfer/lock": {
      "put": {
        "operationId": "updateTransferLock",
        "summary": "Update domain transfer lock",
        "description": "Allows the modification of a domain transfer lock.\n\n### Required Permissions \n\n - <a href=\"#scopes/domains:transfer\">domains:transfer</a>\n\n### Rate Limits \n\n * The limit for updating the transfer lock for a domain is 5 requests per domain within 300 seconds.",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain whose transfer lock is being updated.",
            "schema": {
              "type": "string",
              "example": "spaceship.com",
              "minLength": 4,
              "maxLength": 255,
              "format": "domain",
              "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domains.DomainTransferLock"
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "The user's request was not authorized properly",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "The user's request not allowed to perform this action with the current scopes",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "The requested object was not found",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectNotFoundError"
                }
              }
            }
          },
          "422": {
            "description": "The entity in unprocessable",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "429": {
            "description": "The response indicates that the rate limit for the API has been exceeded. It includes details about the rate limit, like the number of requests left and the time the rate limit window resets.",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              },
              "X-RateLimit-Limit": {
                "required": true,
                "description": "Request limit per hour",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Remaining": {
                "required": true,
                "description": "The number of requests left for the time window",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "X-RateLimit-Reset": {
                "required": true,
                "description": "The UTC date/time when the current rate limit window resets",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              },
              "Retry-After": {
                "required": true,
                "description": "The number of seconds inndicating how long the client ought to wait before making a follow-up request",
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "maximum": 2147483647
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            }
          },
          "500": {
            "description": "The infrastructure encountered an error",
            "headers": {
              "spaceship-error-code": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              },
              "spaceship-operation-id": {
                "required": true,
                "schema": {
                  "$ref": "#/components/schemas/operationId"
                }
              }
            },
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnexpectedError"
                }
              }
            }
          }
        },
        "tags": [
          "Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domains.DomainTransferLock"
              }
            }
          },
          "description": "Provides the new trnasfer lock for the domain."
        },
        "x-scopes": [
          "domains:transfer"
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "source": "const url = 'https://spaceship.dev/api/v1/domains/spaceship.com/transfer/lock';\nconst options = {\n  method: 'PUT',\n  headers: {\n    'X-API-Key': 'REPLACE_KEY_VALUE',\n    'X-API-Secret': 'REPLACE_KEY_VALUE',\n    'content-type': 'application/json'\n  },\n  body: JSON.stringify({isLocked: true})\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error(err));"
          },
          {
            "lang": "php",
            "source": "<?php\nrequire_once('vendor/autoload.php');\n\n$client = new \\GuzzleHttp\\Client();\n\n$response = $client->request('PUT', 'https://spaceship.dev/api/v1/domains/spaceship.com/transfer/lock', [\n  'body' => '{\"isLocked\":true}',\n  'headers' => [\n    'X-API-Key' => 'REPLACE_KEY_VALUE',\n    'X-API-Secret' => 'REPLACE_KEY_VALUE',\n    'content-type' => 'application/json',\n  ],\n]);\n\necho $response->getBody();"
          },
          {
            "lang": "python",
            "source": "import requests\n\nurl = \"https://spaceship.dev/api/v1/domains/spaceship.com/transfer/lock\"\n\npayload = { \"isLocked\": True }\nheaders = {\n    \"X-API-Key\": \"REPLACE_KEY_VALUE\",\n    \"X-API-Secret\": \"REPLACE_KEY_VALUE\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.put(url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "shell",
            "source": "curl --request PUT \\\n     --url https://spaceship.dev/api/v1/domains/spaceship.com/transfer/lock \\\n     --header 'X-API-Key: REPLACE_KEY_VALUE' \\\n     --header 'X-API-Secret: REPLACE_KEY_VALUE' \\\n     --header 'content-type: application/json' \\\n     --data '{\"isLocked\":true}'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "A"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/ipV4Address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to map a domain name to its corresponding IPv4 address"
      },
      "AResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "A"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/ipV4Address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to map a domain name to its corresponding IPv4 address"
      },
      "AResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "A"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/ipV4Address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to map a domain name to its corresponding IPv4 address"
      },
      "AaaaResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "AAAA"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/ipV6Address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to map a domain name to its corresponding IPv6 address"
      },
      "AaaaResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "AAAA"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/ipV6Address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to map a domain name to its corresponding IPv6 address"
      },
      "AaaaResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "AAAA"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/ipV6Address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to map a domain name to its corresponding IPv6 address"
      },
      "AliasResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "aliasName"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ALIAS"
            ]
          },
          "aliasName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Canonical (true) domain name that is used to resolve resource records. Implements CNAME-like behavior for apex domain where CNAME is not allowed"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to create a CNAME-like behavior for apex domain where CNAME is not allowed"
      },
      "AliasResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "aliasName"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ALIAS"
            ]
          },
          "aliasName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Canonical (true) domain name that is used to resolve resource records. Implements CNAME-like behavior for apex domain where CNAME is not allowed"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to create a CNAME-like behavior for apex domain where CNAME is not allowed"
      },
      "AliasResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "aliasName"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ALIAS"
            ]
          },
          "aliasName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Canonical (true) domain name that is used to resolve resource records. Implements CNAME-like behavior for apex domain where CNAME is not allowed"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to create a CNAME-like behavior for apex domain where CNAME is not allowed"
      },
      "AttributeDetails": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "minLength": 2,
            "maxLength": 32,
            "pattern": "\\w+"
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "eu": "#/components/schemas/EuAttributeDetails",
            "nyc": "#/components/schemas/NycAttributeDetails",
            "ca": "#/components/schemas/CaAttributeDetails",
            "tel": "#/components/schemas/TelAttributeDetails",
            "uk": "#/components/schemas/UkAttributeDetails",
            "us": "#/components/schemas/UsAttributeDetails",
            "xxx": "#/components/schemas/XxxAttributeDetails"
          }
        },
        "description": "Attribute details"
      },
      "CNameResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "cname"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CNAME"
            ]
          },
          "cname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Canonical (true) domain name that is used to resolve resource records"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to map an alias or subdomain to its canonical (true) domain name"
      },
      "CNameResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "cname"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CNAME"
            ]
          },
          "cname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Canonical (true) domain name that is used to resolve resource records"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to map an alias or subdomain to its canonical (true) domain name"
      },
      "CNameResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "cname"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CNAME"
            ]
          },
          "cname": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Canonical (true) domain name that is used to resolve resource records"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to map an alias or subdomain to its canonical (true) domain name"
      },
      "CaAttributeDetails": {
        "type": "object",
        "required": [
          "type",
          "agreement",
          "language",
          "adminCiraCategory",
          "registrantCiraCategory"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ca"
            ]
          },
          "agreement": {
            "type": "boolean"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "adminCiraCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CaCiraCategory"
              }
            ],
            "description": "Cira category for administrative contact"
          },
          "registrantCiraCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CaCiraCategory"
              }
            ],
            "description": "Cira category for registrant contact"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "CaCiraCategory": {
        "type": "string",
        "enum": [
          "CCO",
          "CCT",
          "RES",
          "GOV",
          "EDU",
          "ASS",
          "HOP",
          "PRT",
          "TDM",
          "TRD",
          "PLT",
          "LAM",
          "TRS",
          "ABO",
          "INB",
          "LGR6",
          "OMK",
          "MAJ"
        ],
        "example": "CCT"
      },
      "CaaResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "flag",
          "tag",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CAA"
            ]
          },
          "flag": {
            "type": "number",
            "enum": [
              0,
              128
            ],
            "description": "0   - no flags are set;\n128 - indicates that the “critical bit” is set, and that CAs should halt and not issue a certificate if they don’t recognize the contents of the tag field"
          },
          "tag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CaaTag"
              }
            ],
            "description": "Indicates specific actions or restrictions related to certificate issuance"
          },
          "value": {
            "type": "string",
            "maxLength": 256,
            "pattern": "^[ -~]+$",
            "description": "Contains at most one CA identifier and optional semicolon-separated parameters"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Allows domain owners to specify which Certificate Authorities (CAs) are authorized to issue SSL/TLS certificates for their domain"
      },
      "CaaResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "flag",
          "tag",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CAA"
            ]
          },
          "flag": {
            "type": "number",
            "enum": [
              0,
              128
            ],
            "description": "0   - no flags are set;\n128 - indicates that the “critical bit” is set, and that CAs should halt and not issue a certificate if they don’t recognize the contents of the tag field"
          },
          "tag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CaaTag"
              }
            ],
            "description": "Indicates specific actions or restrictions related to certificate issuance"
          },
          "value": {
            "type": "string",
            "maxLength": 256,
            "pattern": "^[ -~]+$",
            "description": "Contains at most one CA identifier and optional semicolon-separated parameters"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Allows domain owners to specify which Certificate Authorities (CAs) are authorized to issue SSL/TLS certificates for their domain"
      },
      "CaaResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "flag",
          "tag",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CAA"
            ]
          },
          "flag": {
            "type": "number",
            "enum": [
              0,
              128
            ],
            "description": "0   - no flags are set;\n128 - indicates that the “critical bit” is set, and that CAs should halt and not issue a certificate if they don’t recognize the contents of the tag field"
          },
          "tag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CaaTag"
              }
            ],
            "description": "Indicates specific actions or restrictions related to certificate issuance"
          },
          "value": {
            "type": "string",
            "maxLength": 256,
            "pattern": "^[ -~]+$",
            "description": "Contains at most one CA identifier and optional semicolon-separated parameters"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Allows domain owners to specify which Certificate Authorities (CAs) are authorized to issue SSL/TLS certificates for their domain"
      },
      "CaaTag": {
        "type": "string",
        "enum": [
          "issue",
          "issuewild",
          "iodef"
        ]
      },
      "ContactDetails": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "address1",
          "city",
          "country",
          "phone"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John",
            "minLength": 1,
            "maxLength": 125,
            "pattern": "^['A-Za-z-][\\s'A-Z`a-z-]+['A-Za-z-]$|^['A-Za-z-]{0,2}$",
            "description": "Contact's first name"
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "minLength": 1,
            "maxLength": 125,
            "pattern": "^['A-Za-z-][\\s'A-Z`a-z-]+['A-Za-z-]$|^['A-Za-z-]{0,2}$",
            "description": "Contact's last name"
          },
          "organization": {
            "type": "string",
            "example": "My Company",
            "maxLength": 255,
            "pattern": "^(?!\\s)[\\u0000-\\u007F]{2,}(?!\\s)[\\u0000-\\u007F]$|^((?!\\s)[\\u0000-\\u007F])*$",
            "description": "Organization/Company name"
          },
          "email": {
            "type": "string",
            "example": "admin@example.com",
            "minLength": 3,
            "maxLength": 255,
            "format": "email",
            "description": "Email"
          },
          "address1": {
            "type": "string",
            "example": "286 King St.",
            "maxLength": 255,
            "pattern": "^[\\d#&'()./:;A-Za-z\\s-,\\\\]+$",
            "description": "Address (line 1)"
          },
          "address2": {
            "type": "string",
            "maxLength": 255,
            "pattern": "^[\\d#&'()./:;A-Za-z\\s-,\\\\]+$",
            "description": "Address (line 2)"
          },
          "city": {
            "type": "string",
            "example": "San Francisco",
            "maxLength": 255,
            "pattern": "^['.A-Za-z-][\\s'.A-Za-z-]+['.A-Za-z-]$|^['.A-Za-z-]{0,2}$",
            "description": "City"
          },
          "country": {
            "$ref": "#/components/schemas/countryCode"
          },
          "stateProvince": {
            "type": "string",
            "example": "CA",
            "maxLength": 255,
            "pattern": "^['A-Za-z-][\\s'A-Z`a-z-]+['A-Za-z-]$|^['A-Za-z-]{0,2}$",
            "description": "State province name"
          },
          "postalCode": {
            "type": "string",
            "example": "94107",
            "maxLength": 16,
            "pattern": "^[\\dA-Za-z-][\\d\\sA-Za-z-]+[\\dA-Za-z-]$|^[\\dA-Za-z-]{0,2}$",
            "description": "Postal code"
          },
          "phone": {
            "$ref": "#/components/schemas/phone"
          },
          "phoneExt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/phoneExt"
              }
            ],
            "description": "Phone number extension"
          },
          "fax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/phone"
              }
            ],
            "description": "Fax number"
          },
          "faxExt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/phoneExt"
              }
            ],
            "description": "Fax number extension"
          },
          "taxNumber": {
            "type": "string",
            "example": "123456789",
            "maxLength": 255,
            "pattern": "^[\\d./A-Za-z-][\\d\\s./A-Za-z-]+[\\d./A-Za-z-]$|^[\\d./A-Za-z-]{0,2}$",
            "format": "taxNumber",
            "description": "Tax number"
          }
        },
        "description": "Contact details"
      },
      "Contacts.SaveResponse": {
        "type": "object",
        "required": [
          "contactId"
        ],
        "properties": {
          "contactId": {
            "type": "string",
            "minLength": 27,
            "maxLength": 32,
            "pattern": "[a-zA-Z0-9]+",
            "description": "Response with contactId generated, if contact was created, or existing contact's one."
          }
        }
      },
      "DomainClientEPPStatus": {
        "type": "string",
        "enum": [
          "clientDeleteProhibited",
          "clientHold",
          "clientRenewProhibited",
          "clientTransferProhibited",
          "clientUpdateProhibited"
        ]
      },
      "DomainContacts": {
        "type": "object",
        "required": [
          "registrant"
        ],
        "properties": {
          "registrant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/contactId"
              }
            ],
            "description": "ID of the registrant contact person"
          },
          "admin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/contactId"
              }
            ],
            "description": "ID of the admin contact person"
          },
          "tech": {
            "allOf": [
              {
                "$ref": "#/components/schemas/contactId"
              }
            ],
            "description": "ID of the technical contact person"
          },
          "billing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/contactId"
              }
            ],
            "description": "ID of the billing contact person"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contactId"
            },
            "example": [
              "1ZdMXpapqp9sle5dl8BlppTJXAzf3",
              "1ZdMXpapqp9sle5dl8BlppTJXAzf2"
            ],
            "maxItems": 5,
            "description": "List of extended attribute contact point IDs"
          }
        },
        "description": "Domain Contacts presented as ID references"
      },
      "DomainCreateInfo": {
        "type": "object",
        "required": [
          "name",
          "autoRenew",
          "privacyProtection",
          "nameservers",
          "contacts"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/domainNameULabel"
              }
            ],
            "example": "spaceship.com"
          },
          "autoRenew": {
            "type": "boolean",
            "example": false,
            "description": "Indicates whether the auto-renew option is enabled"
          },
          "privacyProtection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainPrivacyProtection"
              }
            ],
            "description": "Information about domain privacy protection"
          },
          "nameservers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainNameServersConfigurationRequest"
              }
            ],
            "example": {
              "provider": "custom",
              "hosts": [
                "ns1.exampledomain.com",
                "ns2.exampledomain.com"
              ]
            },
            "description": "Information about nameservers"
          },
          "contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainContacts"
              }
            ],
            "example": {
              "registrant": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "admin": "1ZdMXpapqp9sle5dl8BlppTJXAzf6",
              "tech": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "billing": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "attributes": [
                "1ZdMXpapqp9sle5dl8BlppTJXAzf8"
              ]
            }
          }
        }
      },
      "DomainInfo": {
        "type": "object",
        "required": [
          "name",
          "unicodeName",
          "isPremium",
          "autoRenew",
          "registrationDate",
          "expirationDate",
          "lifecycleStatus",
          "verificationStatus",
          "eppStatuses",
          "suspensions",
          "privacyProtection",
          "nameservers",
          "contacts"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/domainNameALabel"
              }
            ],
            "example": "xn--spceship-9ya.com"
          },
          "unicodeName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/domainNameULabel"
              }
            ],
            "example": "spaceship.com"
          },
          "isPremium": {
            "type": "boolean",
            "example": false,
            "description": "Indicates whether the domain is premium",
            "readOnly": true
          },
          "autoRenew": {
            "type": "boolean",
            "example": false,
            "description": "Indicates whether the auto-renew option is enabled",
            "readOnly": true
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z",
            "description": "The date when the domain was registered",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2022-01-01T00:00:00.000Z",
            "description": "The date when the domain registration expires",
            "readOnly": true
          },
          "lifecycleStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainLifecycleStatus"
              }
            ],
            "example": "registered",
            "description": "Current lifecycle status of the domain. Possible values are:\n\n* `creating` - The domain is being registered. This status means that the request has not yet been processed by the registry.\n* `registered` - The domain is registered.\n* `grace1` - The domain has expired but is still fully manageable.\n* `grace2` - The domain expired, parked, and its management is limited.\n* `redemption` - The domain has been deleted from the registry but can be restored.",
            "readOnly": true
          },
          "verificationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainVerificationStatus"
              }
            ],
            "nullable": true,
            "example": "success",
            "description": "Status of the RAA verification process. `null` if RAA procedure is not applied for the domain.",
            "readOnly": true
          },
          "eppStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainClientEPPStatus"
            },
            "example": [
              "clientTransferProhibited"
            ],
            "readOnly": true
          },
          "suspensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainSuspensionDetails"
            },
            "maxItems": 2,
            "description": "Information about domain suspensions.\nThe array may be empty, contain details about one suspension (raaVerification, abuse, promoAbuse, fraud, pendingAccountVerification, unauthorizedAccess, tosViolation, transferDispute, restrictedSecurity, lockCourt, suspendCourt, udrpUrs, restrictedLegal, paymentPending, or unpaidService), or up to two: one raaVerification and one legal (abuse, promoAbuse, fraud, pendingAccountVerification, unauthorizedAccess, tosViolation, transferDispute, restrictedSecurity, lockCourt, suspendCourt, udrpUrs, restrictedLegal, paymentPending, or unpaidService)."
          },
          "privacyProtection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainPrivacyProtection"
              }
            ],
            "description": "Information about domain privacy protection"
          },
          "nameservers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainNameServersConfigurationResponse"
              }
            ],
            "example": {
              "provider": "basic",
              "hosts": [
                "ns1.exampledomain.com",
                "ns2.exampledomain.com"
              ]
            },
            "description": "Information about nameservers"
          },
          "contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainContacts"
              }
            ],
            "example": {
              "registrant": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "admin": "1ZdMXpapqp9sle5dl8BlppTJXAzf6",
              "tech": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "billing": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
              "attributes": [
                "1ZdMXpapqp9sle5dl8BlppTJXAzf8"
              ]
            }
          }
        }
      },
      "DomainLifecycleStatus": {
        "type": "string",
        "enum": [
          "creating",
          "registered",
          "grace1",
          "grace2",
          "redemption"
        ]
      },
      "DomainNameServersConfigurationRequest": {
        "type": "object",
        "required": [
          "provider"
        ],
        "properties": {
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Provider"
              }
            ],
            "example": "custom",
            "description": "Nameservers provider"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fqdn"
            },
            "example": [
              "ns1.exampledomain.com",
              "ns2.exampledomain.com"
            ],
            "minItems": 2,
            "maxItems": 12,
            "description": "A list of nameservers to be assigned to the domain. Each nameserver must be provided in a fully qualified domain format.\nThis field must be specified only for the \"custom\" provider; for the \"basic\" provider it should be omitted."
          }
        }
      },
      "DomainNameServersConfigurationResponse": {
        "type": "object",
        "required": [
          "hosts"
        ],
        "properties": {
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fqdn"
            },
            "example": [
              "ns1.exampledomain.com",
              "ns2.exampledomain.com"
            ],
            "minItems": 2,
            "maxItems": 12,
            "description": "A list of nameservers assigned to the domain. Each nameserver is provided in a fully qualified domain format."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainNameServersConfigurationRequest"
          }
        ]
      },
      "DomainPrivacyLevel": {
        "type": "string",
        "enum": [
          "public",
          "high"
        ]
      },
      "DomainPrivacyProtection": {
        "type": "object",
        "required": [
          "contactForm",
          "level"
        ],
        "properties": {
          "contactForm": {
            "type": "boolean",
            "example": true,
            "description": "Indicates whether WHOIS should display the contact form link"
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainPrivacyLevel"
              }
            ],
            "example": "high",
            "description": "Level of privacy protection set for the domain"
          }
        }
      },
      "DomainSuspensionDetails": {
        "type": "object",
        "required": [
          "reasonCode"
        ],
        "properties": {
          "reasonCode": {
            "type": "string",
            "enum": [
              "raaVerification",
              "abuse",
              "promoAbuse",
              "fraud",
              "pendingAccountVerification",
              "unauthorizedAccess",
              "tosViolation",
              "transferDispute",
              "restrictedSecurity",
              "lockCourt",
              "suspendCourt",
              "udrpUrs",
              "restrictedLegal",
              "paymentPending",
              "unpaidService"
            ],
            "example": "raaVerification",
            "description": "Suspension reason code"
          }
        }
      },
      "DomainValidVerificationStatus": {
        "type": "string",
        "enum": [
          "verification",
          "success"
        ],
        "example": "success",
        "description": "Status of the RAA verification process. Possible values are:\n* `verification` - Verification process is in progress and requires user interaction.\n* `success` - Verification success."
      },
      "DomainVerificationStatus": {
        "type": "string",
        "enum": [
          "verification",
          "success",
          "failed"
        ],
        "example": "success",
        "description": "Status of the RAA verification process. Possible values are:\n* `verification` - Verification process is in progress and requires user interaction.\n* `success` - Verification success.\n* `failed` - Verification failed."
      },
      "Domains.DomainAuthCodeResponse": {
        "type": "object",
        "required": [
          "authCode",
          "expires"
        ],
        "properties": {
          "authCode": {
            "type": "string",
            "example": "7d5 1debf %^$%#",
            "maxLength": 50,
            "pattern": "^.+$",
            "description": "The auth code for the domain"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "example": "1970-01-01T00:00:00.000Z",
            "description": "The expiration date for the auth code",
            "readOnly": true
          }
        },
        "description": "Represents wrapper object for auth code response"
      },
      "Domains.DomainAutoRenewal": {
        "type": "object",
        "required": [
          "isAutoRenewing"
        ],
        "properties": {
          "isAutoRenewing": {
            "type": "boolean",
            "example": true,
            "description": "Describes autorenewal state for the domain"
          }
        },
        "description": "Represents wrapper object for autorenewal state"
      },
      "Domains.DomainEmailProtectionPreference": {
        "type": "object",
        "required": [
          "contactForm"
        ],
        "properties": {
          "contactForm": {
            "type": "boolean",
            "example": true,
            "description": "Indicates whether WHOIS should display the contact form link"
          }
        },
        "description": "Represents a wrapper object for domain's email protection preference"
      },
      "Domains.DomainPrivacyPreference": {
        "type": "object",
        "required": [
          "privacyLevel",
          "userConsent"
        ],
        "properties": {
          "privacyLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainPrivacyLevel"
              }
            ],
            "example": "high",
            "description": "Describes privacy preference for the domain"
          },
          "userConsent": {
            "type": "boolean",
            "example": true,
            "description": "Expresses the user's consent for privacy changes. The operation will be performed ONLY if the flag is 'true'."
          }
        },
        "description": "Represents a wrapper object for domain's privacy level preference"
      },
      "Domains.DomainTransferLock": {
        "type": "object",
        "required": [
          "isLocked"
        ],
        "properties": {
          "isLocked": {
            "type": "boolean",
            "example": true,
            "description": "Describes transfer lock for the domain"
          }
        },
        "description": "Represents wrapper object for transfer lock"
      },
      "Domains.GetDomainListQueryParams": {
        "type": "object",
        "required": [
          "take",
          "skip"
        ],
        "properties": {
          "take": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "description": "Number of response items per page"
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of response items to skip"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "name",
                "-name",
                "unicodeName",
                "-unicodeName",
                "registrationDate",
                "-registrationDate",
                "expirationDate",
                "-expirationDate"
              ]
            },
            "maxItems": 1,
            "description": "Specifies fields and order to sort the response items"
          }
        },
        "description": "Domains list query params"
      },
      "Domains.PutContactsResponse": {
        "type": "object",
        "required": [
          "verificationStatus"
        ],
        "properties": {
          "verificationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainValidVerificationStatus"
              }
            ],
            "nullable": true,
            "example": "success",
            "description": "Status of the RAA verification process. `null` if RAA procedure is not applied for the domain."
          }
        },
        "description": "Contacts updated successfully. Optionally contacts verification may be required."
      },
      "ErrorDetail": {
        "type": "object",
        "required": [
          "detail"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          }
        }
      },
      "EuAttributeDetails": {
        "type": "object",
        "required": [
          "type",
          "euAdrLang",
          "isNaturalPerson"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "eu"
            ]
          },
          "euAdrLang": {
            "$ref": "#/components/schemas/language"
          },
          "isNaturalPerson": {
            "type": "boolean",
            "description": "Indicates if person is private individual"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "ForbiddenError": {
        "type": "object",
        "required": [
          "detail"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          }
        }
      },
      "HostNameServers": {
        "type": "object",
        "required": [
          "ips"
        ],
        "properties": {
          "ips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ipAddress"
            },
            "example": [
              "127.2.2.2",
              "12.22.22.21"
            ],
            "maxItems": 255
          }
        }
      },
      "HttpsResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "svcPriority",
          "targetName",
          "svcParams"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "HTTPS"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_8443",
            "description": "Specifies the port number for which the HTTPS record is applicable.\nIf specified, it must be a single wildcard (an asterisk symbol) or a string that starts with an underscore and continues with a number from 1 to 65535."
          },
          "scheme": {
            "type": "string",
            "enum": [
              "_https"
            ],
            "example": "_https",
            "description": "Specifies the scheme over which the HTTPS record applies.\nIt is optional if the port is not specified, otherwise it is required and must be \"_https\""
          },
          "svcPriority": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 65535,
            "description": "The priority of this record (relative to others, with lower values preferred).\nA value of 0 indicates AliasMode and other values indicate ServiceMode."
          },
          "targetName": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "."
                ]
              },
              {
                "$ref": "#/components/schemas/fqdn"
              }
            ],
            "example": "_443._https.www.example.com",
            "maxLength": 253,
            "description": "A fully qualified domain name (FQDN) or a single \".\", either the alias target (for AliasMode) or the alternative endpoint (for ServiceMode).\nFor AliasMode, a TargetName of \".\" indicates that the service is not available or does not exist.\nFor ServiceMode, if TargetName has the value \".\", then the owner name of this record is used as the effective TargetName."
          },
          "svcParams": {
            "type": "string",
            "minLength": 0,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "A whitespace-separated list with parameters describing the alternative endpoint at TargetName (only used in ServiceMode and otherwise ignored).\nEach SvcParam consisting of a SvcParamKey=SvcParamValue pair or a standalone SvcParamKey.\n\nInitial keys: \"mandatory\", \"alpn\", \"no-default-alpn\", \"port\", \"ipv4hint\", \"ech\", \"ipv6hint\", \"dohpath\", \"ohttp\", \"tls-supported-groups\".\n\nArbitrary keys can be represented using the unknown-key presentation format \"keyNNNNN\" where NNNNN is the numeric value of the key type without leading zeros (Number 0-65535).",
            "default": ""
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to deliver configuration information and parameters for how to access a service via HTTPS."
      },
      "HttpsResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "svcPriority",
          "targetName",
          "svcParams"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "HTTPS"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_8443",
            "description": "Specifies the port number for which the HTTPS record is applicable.\nIf specified, it must be a single wildcard (an asterisk symbol) or a string that starts with an underscore and continues with a number from 1 to 65535."
          },
          "scheme": {
            "type": "string",
            "enum": [
              "_https"
            ],
            "example": "_https",
            "description": "Specifies the scheme over which the HTTPS record applies.\nIt is optional if the port is not specified, otherwise it is required and must be \"_https\""
          },
          "svcPriority": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 65535,
            "description": "The priority of this record (relative to others, with lower values preferred).\nA value of 0 indicates AliasMode and other values indicate ServiceMode."
          },
          "targetName": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "."
                ]
              },
              {
                "$ref": "#/components/schemas/fqdn"
              }
            ],
            "example": "_443._https.www.example.com",
            "maxLength": 253,
            "description": "A fully qualified domain name (FQDN) or a single \".\", either the alias target (for AliasMode) or the alternative endpoint (for ServiceMode).\nFor AliasMode, a TargetName of \".\" indicates that the service is not available or does not exist.\nFor ServiceMode, if TargetName has the value \".\", then the owner name of this record is used as the effective TargetName."
          },
          "svcParams": {
            "type": "string",
            "minLength": 0,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "A whitespace-separated list with parameters describing the alternative endpoint at TargetName (only used in ServiceMode and otherwise ignored).\nEach SvcParam consisting of a SvcParamKey=SvcParamValue pair or a standalone SvcParamKey.\n\nInitial keys: \"mandatory\", \"alpn\", \"no-default-alpn\", \"port\", \"ipv4hint\", \"ech\", \"ipv6hint\", \"dohpath\", \"ohttp\", \"tls-supported-groups\".\n\nArbitrary keys can be represented using the unknown-key presentation format \"keyNNNNN\" where NNNNN is the numeric value of the key type without leading zeros (Number 0-65535).",
            "default": ""
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to deliver configuration information and parameters for how to access a service via HTTPS."
      },
      "HttpsResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "svcPriority",
          "targetName",
          "svcParams"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "HTTPS"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_8443",
            "description": "Specifies the port number for which the HTTPS record is applicable.\nIf specified, it must be a single wildcard (an asterisk symbol) or a string that starts with an underscore and continues with a number from 1 to 65535."
          },
          "scheme": {
            "type": "string",
            "enum": [
              "_https"
            ],
            "example": "_https",
            "description": "Specifies the scheme over which the HTTPS record applies.\nIt is optional if the port is not specified, otherwise it is required and must be \"_https\""
          },
          "svcPriority": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 65535,
            "description": "The priority of this record (relative to others, with lower values preferred).\nA value of 0 indicates AliasMode and other values indicate ServiceMode."
          },
          "targetName": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "."
                ]
              },
              {
                "$ref": "#/components/schemas/fqdn"
              }
            ],
            "example": "_443._https.www.example.com",
            "maxLength": 253,
            "description": "A fully qualified domain name (FQDN) or a single \".\", either the alias target (for AliasMode) or the alternative endpoint (for ServiceMode).\nFor AliasMode, a TargetName of \".\" indicates that the service is not available or does not exist.\nFor ServiceMode, if TargetName has the value \".\", then the owner name of this record is used as the effective TargetName."
          },
          "svcParams": {
            "type": "string",
            "minLength": 0,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "A whitespace-separated list with parameters describing the alternative endpoint at TargetName (only used in ServiceMode and otherwise ignored).\nEach SvcParam consisting of a SvcParamKey=SvcParamValue pair or a standalone SvcParamKey.\n\nInitial keys: \"mandatory\", \"alpn\", \"no-default-alpn\", \"port\", \"ipv4hint\", \"ech\", \"ipv6hint\", \"dohpath\", \"ohttp\", \"tls-supported-groups\".\n\nArbitrary keys can be represented using the unknown-key presentation format \"keyNNNNN\" where NNNNN is the numeric value of the key type without leading zeros (Number 0-65535).",
            "default": ""
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to deliver configuration information and parameters for how to access a service via HTTPS."
      },
      "MxResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "exchange",
          "preference"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "MX"
            ]
          },
          "exchange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Mail server that accepts mail"
          },
          "preference": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "Preference (distance) number of mail server"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Specifies the mail servers responsible for receiving email messages on behalf of a domain"
      },
      "MxResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "exchange",
          "preference"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "MX"
            ]
          },
          "exchange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Mail server that accepts mail"
          },
          "preference": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "Preference (distance) number of mail server"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Specifies the mail servers responsible for receiving email messages on behalf of a domain"
      },
      "MxResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "exchange",
          "preference"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "MX"
            ]
          },
          "exchange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Mail server that accepts mail"
          },
          "preference": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "Preference (distance) number of mail server"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Specifies the mail servers responsible for receiving email messages on behalf of a domain"
      },
      "NsResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "nameserver"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NS"
            ]
          },
          "nameserver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Nameserver name"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Specifies which name servers are authoritative for a specific domain"
      },
      "NsResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "nameserver"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NS"
            ]
          },
          "nameserver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Nameserver name"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Specifies which name servers are authoritative for a specific domain"
      },
      "NsResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "nameserver"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NS"
            ]
          },
          "nameserver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "Nameserver name"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Specifies which name servers are authoritative for a specific domain"
      },
      "NycAttributeDetails": {
        "type": "object",
        "required": [
          "type",
          "nexusCategory"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "nyc"
            ]
          },
          "nexusCategory": {
            "type": "string",
            "enum": [
              "Org",
              "Indiv"
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "ObjectNotFoundError": {
        "type": "object",
        "required": [
          "detail"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          }
        }
      },
      "PersonalNameserverRecord": {
        "type": "object",
        "required": [
          "host",
          "ips"
        ],
        "properties": {
          "host": {
            "allOf": [
              {
                "$ref": "#/components/schemas/host"
              }
            ],
            "example": "ns1",
            "description": "The host name of the personal nameserver"
          },
          "ips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ipAddress"
            },
            "example": [
              "127.2.2.2",
              "12.22.22.21"
            ],
            "minItems": 1,
            "maxItems": 16,
            "description": "List of IP addresses associated with the personal nameserver host"
          }
        }
      },
      "PersonalNameservers": {
        "type": "object",
        "required": [
          "records"
        ],
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonalNameserverRecord"
            },
            "example": [
              {
                "host": "ns1",
                "ips": [
                  "127.0.0.1",
                  "127.0.0.2"
                ]
              },
              {
                "host": "ns2",
                "ips": [
                  "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
                ]
              }
            ],
            "minItems": 1,
            "maxItems": 255,
            "description": "List of hosts and IP addresses associated with the personal nameservers"
          }
        }
      },
      "Provider": {
        "type": "string",
        "enum": [
          "basic",
          "custom"
        ]
      },
      "PtrResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "pointer"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PTR"
            ]
          },
          "pointer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "The domain name that corresponds to the given IP address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to map an IP address to its corresponding domain name in a reverse DNS lookup"
      },
      "PtrResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "pointer"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PTR"
            ]
          },
          "pointer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "The domain name that corresponds to the given IP address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to map an IP address to its corresponding domain name in a reverse DNS lookup"
      },
      "PtrResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "pointer"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PTR"
            ]
          },
          "pointer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "The domain name that corresponds to the given IP address"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to map an IP address to its corresponding domain name in a reverse DNS lookup"
      },
      "RateLimitError": {
        "type": "object",
        "required": [
          "detail"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          }
        }
      },
      "Records.GetResourceRecordsListQueryParams": {
        "type": "object",
        "required": [
          "take",
          "skip"
        ],
        "properties": {
          "take": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 500,
            "description": "Number of response items per page"
          },
          "skip": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Number of response items to skip"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "type",
                "-type",
                "name",
                "-name"
              ]
            },
            "maxItems": 1,
            "description": "Specifies fields and order to sort the response items"
          }
        },
        "description": "Resource records list query params"
      },
      "Records.RecordsUpdateModel": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "force": {
            "type": "boolean",
            "description": "Turn-off conflicts resolution checker and force zone update"
          },
          "items": {
            "$ref": "#/components/schemas/ResourceRecordsListCreateOrUpdateItem",
            "description": "Records"
          }
        }
      },
      "ResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "name",
          "group"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "A",
            "minLength": 1,
            "maxLength": 5,
            "pattern": "\\w+"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "example": "@",
            "description": "Name of resource record excluding domain name part. '@' can be used as an apex domain"
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "example": 3600,
            "minimum": 60,
            "maximum": 3600,
            "description": "Specifies the amount of time in seconds that a DNS record should be cached by a resolver\nor a caching server before it expires and needs to be refreshed from the authoritative DNS servers"
          },
          "group": {
            "$ref": "#/components/schemas/ResourceRecordsGroup"
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AAAA": "#/components/schemas/AaaaResourceRecord",
            "ALIAS": "#/components/schemas/AliasResourceRecord",
            "A": "#/components/schemas/AResourceRecord",
            "CAA": "#/components/schemas/CaaResourceRecord",
            "CNAME": "#/components/schemas/CNameResourceRecord",
            "HTTPS": "#/components/schemas/HttpsResourceRecord",
            "MX": "#/components/schemas/MxResourceRecord",
            "NS": "#/components/schemas/NsResourceRecord",
            "PTR": "#/components/schemas/PtrResourceRecord",
            "SRV": "#/components/schemas/SrvResourceRecord",
            "SVCB": "#/components/schemas/SvcbResourceRecord",
            "TLSA": "#/components/schemas/TlsaResourceRecord",
            "TXT": "#/components/schemas/TxtResourceRecord"
          }
        },
        "description": "DNS resource record details"
      },
      "ResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "A",
            "minLength": 1,
            "maxLength": 5,
            "pattern": "\\w+"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "example": "@",
            "description": "Name of resource record excluding domain name part. '@' can be used as an apex domain"
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "example": 3600,
            "minimum": 60,
            "maximum": 3600,
            "description": "Specifies the amount of time in seconds that a DNS record should be cached by a resolver\nor a caching server before it expires and needs to be refreshed from the authoritative DNS servers"
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AAAA": "#/components/schemas/AaaaResourceRecordCreateOrUpdateItem",
            "ALIAS": "#/components/schemas/AliasResourceRecordCreateOrUpdateItem",
            "A": "#/components/schemas/AResourceRecordCreateOrUpdateItem",
            "CAA": "#/components/schemas/CaaResourceRecordCreateOrUpdateItem",
            "CNAME": "#/components/schemas/CNameResourceRecordCreateOrUpdateItem",
            "HTTPS": "#/components/schemas/HttpsResourceRecordCreateOrUpdateItem",
            "MX": "#/components/schemas/MxResourceRecordCreateOrUpdateItem",
            "NS": "#/components/schemas/NsResourceRecordCreateOrUpdateItem",
            "PTR": "#/components/schemas/PtrResourceRecordCreateOrUpdateItem",
            "SRV": "#/components/schemas/SrvResourceRecordCreateOrUpdateItem",
            "SVCB": "#/components/schemas/SvcbResourceRecordCreateOrUpdateItem",
            "TLSA": "#/components/schemas/TlsaResourceRecordCreateOrUpdateItem",
            "TXT": "#/components/schemas/TxtResourceRecordCreateOrUpdateItem"
          }
        },
        "description": "DNS resource record details"
      },
      "ResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "A",
            "minLength": 1,
            "maxLength": 5,
            "pattern": "\\w+"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "example": "@",
            "description": "Name of resource record excluding domain name part. '@' can be used as an apex domain"
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AAAA": "#/components/schemas/AaaaResourceRecordDeleteItem",
            "ALIAS": "#/components/schemas/AliasResourceRecordDeleteItem",
            "A": "#/components/schemas/AResourceRecordDeleteItem",
            "CAA": "#/components/schemas/CaaResourceRecordDeleteItem",
            "CNAME": "#/components/schemas/CNameResourceRecordDeleteItem",
            "HTTPS": "#/components/schemas/HttpsResourceRecordDeleteItem",
            "MX": "#/components/schemas/MxResourceRecordDeleteItem",
            "NS": "#/components/schemas/NsResourceRecordDeleteItem",
            "PTR": "#/components/schemas/PtrResourceRecordDeleteItem",
            "SRV": "#/components/schemas/SrvResourceRecordDeleteItem",
            "SVCB": "#/components/schemas/SvcbResourceRecordDeleteItem",
            "TLSA": "#/components/schemas/TlsaResourceRecordDeleteItem",
            "TXT": "#/components/schemas/TxtResourceRecordDeleteItem"
          }
        },
        "description": "DNS resource record details"
      },
      "ResourceRecordsGroup": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "custom",
              "product",
              "personalNs"
            ],
            "example": "custom",
            "description": "* custom: record belongs to custom resource records group\n* product: record was added as a part of products connection\n* personalNs: record is associated with the corresponding personal nameserver"
          }
        },
        "description": "Details of the group record belongs to"
      },
      "ResourceRecordsListCreateOrUpdateItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
        },
        "minItems": 1,
        "maxItems": 500
      },
      "ResourceRecordsListDeleteItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResourceRecordDeleteItem"
        },
        "minItems": 1,
        "maxItems": 500
      },
      "SrvResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "service",
          "protocol",
          "priority",
          "weight",
          "port",
          "target"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SRV"
            ]
          },
          "service": {
            "type": "string",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Specifies the symbolic name of the desired service.\nFor example, \"_sip\" for SIP (Session Initiation Protocol) or \"_ldap\" for LDAP (Lightweight Directory Access Protocol)"
          },
          "protocol": {
            "type": "string",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the transport protocol the service uses, such as \"_tcp\" for TCP or \"_udp\" for UDP"
          },
          "priority": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "An integer that indicates the priority of the target host, with lower values indicating higher priority"
          },
          "weight": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "Used in conjunction with the Priority field to load balance between multiple targets with the same priority.\nHigher values receive more connections."
          },
          "port": {
            "type": "integer",
            "format": "uint16",
            "minimum": 1,
            "maximum": 65535,
            "description": "The port number on which the service is available."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "The domain name of the server providing the service."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to specify the location of servers for specific services"
      },
      "SrvResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "service",
          "protocol",
          "priority",
          "weight",
          "port",
          "target"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SRV"
            ]
          },
          "service": {
            "type": "string",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Specifies the symbolic name of the desired service.\nFor example, \"_sip\" for SIP (Session Initiation Protocol) or \"_ldap\" for LDAP (Lightweight Directory Access Protocol)"
          },
          "protocol": {
            "type": "string",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the transport protocol the service uses, such as \"_tcp\" for TCP or \"_udp\" for UDP"
          },
          "priority": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "An integer that indicates the priority of the target host, with lower values indicating higher priority"
          },
          "weight": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "Used in conjunction with the Priority field to load balance between multiple targets with the same priority.\nHigher values receive more connections."
          },
          "port": {
            "type": "integer",
            "format": "uint16",
            "minimum": 1,
            "maximum": 65535,
            "description": "The port number on which the service is available."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "The domain name of the server providing the service."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to specify the location of servers for specific services"
      },
      "SrvResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "service",
          "protocol",
          "priority",
          "weight",
          "port",
          "target"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SRV"
            ]
          },
          "service": {
            "type": "string",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Specifies the symbolic name of the desired service.\nFor example, \"_sip\" for SIP (Session Initiation Protocol) or \"_ldap\" for LDAP (Lightweight Directory Access Protocol)"
          },
          "protocol": {
            "type": "string",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the transport protocol the service uses, such as \"_tcp\" for TCP or \"_udp\" for UDP"
          },
          "priority": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "An integer that indicates the priority of the target host, with lower values indicating higher priority"
          },
          "weight": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535,
            "description": "Used in conjunction with the Priority field to load balance between multiple targets with the same priority.\nHigher values receive more connections."
          },
          "port": {
            "type": "integer",
            "format": "uint16",
            "minimum": 1,
            "maximum": 65535,
            "description": "The port number on which the service is available."
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hostNameValue"
              }
            ],
            "description": "The domain name of the server providing the service."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to specify the location of servers for specific services"
      },
      "SvcbResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "svcPriority",
          "targetName",
          "svcParams"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SVCB"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_443",
            "description": "Specifies the port number for which the SVCB record is applicable.\nIf specified, it must be a single wildcard (an asterisk symbol) or a string that starts with an underscore and continues with a number from 1 to 65535."
          },
          "scheme": {
            "type": "string",
            "example": "_tcp",
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the scheme over which the SVCB record applies, such as \"_tcp\" for TCP or \"_udp\" for UDP."
          },
          "svcPriority": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 65535,
            "description": "The priority of this record (relative to others, with lower values preferred).\nWhen svcPriority is 0, the SVCB record is in AliasMode. Otherwise, it is in ServiceMode."
          },
          "targetName": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "."
                ]
              },
              {
                "$ref": "#/components/schemas/fqdn"
              }
            ],
            "example": "_443._https.www.example.com",
            "maxLength": 253,
            "description": "A fully qualified domain name (FQDN) or a single \".\", either the alias target (for AliasMode) or the alternative endpoint (for ServiceMode).\nFor AliasMode, a TargetName of \".\" indicates that the service is not available or does not exist.\nFor ServiceMode, if TargetName has the value \".\", then the owner name of this record is used as the effective TargetName."
          },
          "svcParams": {
            "type": "string",
            "minLength": 0,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "A whitespace-separated list with parameters describing the alternative endpoint at TargetName (only used in ServiceMode and otherwise ignored).\nEach SvcParam consisting of a SvcParamKey=SvcParamValue pair or a standalone SvcParamKey.\n\nInitial keys: \"mandatory\", \"alpn\", \"no-default-alpn\", \"port\", \"ipv4hint\", \"ech\", \"ipv6hint\", \"dohpath\", \"ohttp\", \"tls-supported-groups\".\n\nArbitrary keys can be represented using the unknown-key presentation format \"keyNNNNN\" where NNNNN is the numeric value of the key type without leading zeros (Number 0-65535).",
            "default": ""
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to allow a service to be provided from multiple alternative endpoints, each with associated parameters."
      },
      "SvcbResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "svcPriority",
          "targetName",
          "svcParams"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SVCB"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_443",
            "description": "Specifies the port number for which the SVCB record is applicable.\nIf specified, it must be a single wildcard (an asterisk symbol) or a string that starts with an underscore and continues with a number from 1 to 65535."
          },
          "scheme": {
            "type": "string",
            "example": "_tcp",
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the scheme over which the SVCB record applies, such as \"_tcp\" for TCP or \"_udp\" for UDP."
          },
          "svcPriority": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 65535,
            "description": "The priority of this record (relative to others, with lower values preferred).\nWhen svcPriority is 0, the SVCB record is in AliasMode. Otherwise, it is in ServiceMode."
          },
          "targetName": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "."
                ]
              },
              {
                "$ref": "#/components/schemas/fqdn"
              }
            ],
            "example": "_443._https.www.example.com",
            "maxLength": 253,
            "description": "A fully qualified domain name (FQDN) or a single \".\", either the alias target (for AliasMode) or the alternative endpoint (for ServiceMode).\nFor AliasMode, a TargetName of \".\" indicates that the service is not available or does not exist.\nFor ServiceMode, if TargetName has the value \".\", then the owner name of this record is used as the effective TargetName."
          },
          "svcParams": {
            "type": "string",
            "minLength": 0,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "A whitespace-separated list with parameters describing the alternative endpoint at TargetName (only used in ServiceMode and otherwise ignored).\nEach SvcParam consisting of a SvcParamKey=SvcParamValue pair or a standalone SvcParamKey.\n\nInitial keys: \"mandatory\", \"alpn\", \"no-default-alpn\", \"port\", \"ipv4hint\", \"ech\", \"ipv6hint\", \"dohpath\", \"ohttp\", \"tls-supported-groups\".\n\nArbitrary keys can be represented using the unknown-key presentation format \"keyNNNNN\" where NNNNN is the numeric value of the key type without leading zeros (Number 0-65535).",
            "default": ""
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to allow a service to be provided from multiple alternative endpoints, each with associated parameters."
      },
      "SvcbResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "svcPriority",
          "targetName",
          "svcParams"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SVCB"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_443",
            "description": "Specifies the port number for which the SVCB record is applicable.\nIf specified, it must be a single wildcard (an asterisk symbol) or a string that starts with an underscore and continues with a number from 1 to 65535."
          },
          "scheme": {
            "type": "string",
            "example": "_tcp",
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the scheme over which the SVCB record applies, such as \"_tcp\" for TCP or \"_udp\" for UDP."
          },
          "svcPriority": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 65535,
            "description": "The priority of this record (relative to others, with lower values preferred).\nWhen svcPriority is 0, the SVCB record is in AliasMode. Otherwise, it is in ServiceMode."
          },
          "targetName": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "."
                ]
              },
              {
                "$ref": "#/components/schemas/fqdn"
              }
            ],
            "example": "_443._https.www.example.com",
            "maxLength": 253,
            "description": "A fully qualified domain name (FQDN) or a single \".\", either the alias target (for AliasMode) or the alternative endpoint (for ServiceMode).\nFor AliasMode, a TargetName of \".\" indicates that the service is not available or does not exist.\nFor ServiceMode, if TargetName has the value \".\", then the owner name of this record is used as the effective TargetName."
          },
          "svcParams": {
            "type": "string",
            "minLength": 0,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "A whitespace-separated list with parameters describing the alternative endpoint at TargetName (only used in ServiceMode and otherwise ignored).\nEach SvcParam consisting of a SvcParamKey=SvcParamValue pair or a standalone SvcParamKey.\n\nInitial keys: \"mandatory\", \"alpn\", \"no-default-alpn\", \"port\", \"ipv4hint\", \"ech\", \"ipv6hint\", \"dohpath\", \"ohttp\", \"tls-supported-groups\".\n\nArbitrary keys can be represented using the unknown-key presentation format \"keyNNNNN\" where NNNNN is the numeric value of the key type without leading zeros (Number 0-65535).",
            "default": ""
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to allow a service to be provided from multiple alternative endpoints, each with associated parameters."
      },
      "TelAttributeDetails": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tel"
            ]
          },
          "publish": {
            "type": "boolean"
          },
          "whoisType": {
            "type": "string",
            "enum": [
              "Natural",
              "Legal"
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "TestDomainNameServersConfiguration": {
        "type": "object",
        "required": [
          "provider",
          "hosts"
        ],
        "properties": {
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TestProvider"
              }
            ],
            "example": "basic",
            "description": "Nameservers provider"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/testFqdn"
            },
            "example": [
              "ns1.exampledomain.com",
              "ns2.exampledomain.com"
            ],
            "minItems": 2,
            "maxItems": 12,
            "description": "A list of nameservers to be assigned to the domain. Each nameserver must be provided in a fully qualified domain format."
          },
          "minimumMaximumTest": {
            "type": "integer",
            "format": "int32",
            "example": 5,
            "minimum": 3,
            "maximum": 9,
            "description": "Parameter for minimum / maximum testing and number in int tests."
          },
          "patternTest": {
            "type": "string",
            "example": "sometext_test_pass",
            "maxLength": 255,
            "pattern": "test_pass$",
            "description": "Parameter for pattern tests."
          }
        }
      },
      "TestEntities.AllowedQueryStringValues": {
        "type": "string",
        "enum": [
          "domain",
          "contact",
          "address"
        ]
      },
      "TestProvider": {
        "type": "string",
        "enum": [
          "basic",
          "custom"
        ]
      },
      "TlsaResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "port",
          "protocol",
          "usage",
          "selector",
          "matching",
          "associationData"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TLSA"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_443",
            "description": "Specifies the port number for which the TLSA record is applicable.\nShould be equal asterisk or must start with an underscore and have a number between 1 and 65535"
          },
          "protocol": {
            "type": "string",
            "example": "_tcp",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the protocol over which the TLSA record applies, such as \"_tcp\" for TCP or \"_udp\" for UDP."
          },
          "usage": {
            "type": "integer",
            "format": "uint16",
            "example": 2,
            "minimum": 0,
            "maximum": 255,
            "description": "Specifies how the certificate association is used"
          },
          "selector": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 255,
            "description": "Specifies which part of the certificate to use"
          },
          "matching": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 255,
            "description": "Defines how the certificate association is presented in the record"
          },
          "associationData": {
            "type": "string",
            "example": "7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069",
            "minLength": 64,
            "maxLength": 65535,
            "pattern": "^(?!\\s)(\\s?[0-9a-f]{2})+$",
            "description": "The actual data (hash or full certificate) that the TLSA record is associating with the domain name."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "Used to associate a TLS server certificate or public key with the domain name where the record is found."
      },
      "TlsaResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "port",
          "protocol",
          "usage",
          "selector",
          "matching",
          "associationData"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TLSA"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_443",
            "description": "Specifies the port number for which the TLSA record is applicable.\nShould be equal asterisk or must start with an underscore and have a number between 1 and 65535"
          },
          "protocol": {
            "type": "string",
            "example": "_tcp",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the protocol over which the TLSA record applies, such as \"_tcp\" for TCP or \"_udp\" for UDP."
          },
          "usage": {
            "type": "integer",
            "format": "uint16",
            "example": 2,
            "minimum": 0,
            "maximum": 255,
            "description": "Specifies how the certificate association is used"
          },
          "selector": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 255,
            "description": "Specifies which part of the certificate to use"
          },
          "matching": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 255,
            "description": "Defines how the certificate association is presented in the record"
          },
          "associationData": {
            "type": "string",
            "example": "7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069",
            "minLength": 64,
            "maxLength": 65535,
            "pattern": "^(?!\\s)(\\s?[0-9a-f]{2})+$",
            "description": "The actual data (hash or full certificate) that the TLSA record is associating with the domain name."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "Used to associate a TLS server certificate or public key with the domain name where the record is found."
      },
      "TlsaResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "port",
          "protocol",
          "usage",
          "selector",
          "matching",
          "associationData"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TLSA"
            ]
          },
          "port": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              },
              {
                "$ref": "#/components/schemas/underscoredPort"
              }
            ],
            "example": "_443",
            "description": "Specifies the port number for which the TLSA record is applicable.\nShould be equal asterisk or must start with an underscore and have a number between 1 and 65535"
          },
          "protocol": {
            "type": "string",
            "example": "_tcp",
            "minLength": 2,
            "maxLength": 63,
            "pattern": "_[a-zA-Z0-9-]+",
            "description": "Indicates the protocol over which the TLSA record applies, such as \"_tcp\" for TCP or \"_udp\" for UDP."
          },
          "usage": {
            "type": "integer",
            "format": "uint16",
            "example": 2,
            "minimum": 0,
            "maximum": 255,
            "description": "Specifies how the certificate association is used"
          },
          "selector": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 255,
            "description": "Specifies which part of the certificate to use"
          },
          "matching": {
            "type": "integer",
            "format": "uint16",
            "example": 1,
            "minimum": 0,
            "maximum": 255,
            "description": "Defines how the certificate association is presented in the record"
          },
          "associationData": {
            "type": "string",
            "example": "7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069",
            "minLength": 64,
            "maxLength": 65535,
            "pattern": "^(?!\\s)(\\s?[0-9a-f]{2})+$",
            "description": "The actual data (hash or full certificate) that the TLSA record is associating with the domain name."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "Used to associate a TLS server certificate or public key with the domain name where the record is found."
      },
      "TxtResourceRecord": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TXT"
            ]
          },
          "value": {
            "type": "string",
            "example": "v=spf1 a mx -all",
            "minLength": 1,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "Text value"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecord"
          }
        ],
        "description": "used to store arbitrary text data associated with a domain.\nIt is commonly used for various purposes such as verifying domain ownership for services\nlike email authentication (SPF, DKIM), providing human-readable information,\nor storing any text-based information required by applications"
      },
      "TxtResourceRecordCreateOrUpdateItem": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TXT"
            ]
          },
          "value": {
            "type": "string",
            "example": "v=spf1 a mx -all",
            "minLength": 1,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "Text value"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordCreateOrUpdateItem"
          }
        ],
        "description": "used to store arbitrary text data associated with a domain.\nIt is commonly used for various purposes such as verifying domain ownership for services\nlike email authentication (SPF, DKIM), providing human-readable information,\nor storing any text-based information required by applications"
      },
      "TxtResourceRecordDeleteItem": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TXT"
            ]
          },
          "value": {
            "type": "string",
            "example": "v=spf1 a mx -all",
            "minLength": 1,
            "maxLength": 65535,
            "pattern": ".*",
            "description": "Text value"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRecordDeleteItem"
          }
        ],
        "description": "used to store arbitrary text data associated with a domain.\nIt is commonly used for various purposes such as verifying domain ownership for services\nlike email authentication (SPF, DKIM), providing human-readable information,\nor storing any text-based information required by applications"
      },
      "UkAttributeDetails": {
        "type": "object",
        "required": [
          "type",
          "tradingName",
          "companyType",
          "companyNumber",
          "dataQualityStatus"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "uk"
            ]
          },
          "tradingName": {
            "type": "string",
            "maxLength": 255,
            "pattern": "[\\w0-9 ]+"
          },
          "companyType": {
            "$ref": "#/components/schemas/UkCompanyType"
          },
          "companyNumber": {
            "type": "string",
            "maxLength": 24,
            "pattern": "[a-zA-Z0-9 -]+",
            "description": "Company number"
          },
          "dataQualityStatus": {
            "type": "string",
            "maxLength": 64,
            "pattern": "[a-zA-Z0-9]+",
            "description": "Status Nominet's Data Quality process for .UK family."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "UkCompanyType": {
        "type": "string",
        "enum": [
          "Ltd",
          "Plc",
          "Ind",
          "Find",
          "Rchar",
          "Sch",
          "Llp",
          "Stra",
          "Ptnr",
          "Gov",
          "Crc",
          "Stat",
          "Fcorp",
          "Ip",
          "Fother",
          "Other"
        ]
      },
      "UnauthorizedError": {
        "type": "object",
        "required": [
          "detail"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          }
        }
      },
      "UnexpectedError": {
        "type": "object",
        "required": [
          "detail"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          }
        }
      },
      "UsAttributeDetails": {
        "type": "object",
        "required": [
          "type",
          "appPurpose",
          "nexusCategory"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "us"
            ]
          },
          "appPurpose": {
            "type": "string",
            "enum": [
              "P1",
              "P2",
              "P3",
              "P4",
              "P5"
            ]
          },
          "nexusCategory": {
            "type": "string",
            "enum": [
              "C11",
              "C12",
              "C21",
              "C31",
              "C32"
            ]
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "ValidationError": {
        "type": "object",
        "required": [
          "detail",
          "data"
        ],
        "properties": {
          "detail": {
            "type": "string",
            "pattern": "^[\\s|\\S]*$",
            "description": "A general message about the exception",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "name",
                  "pattern": "^[\\s|\\S]*$",
                  "description": "The path to the field that caused the validation error",
                  "readOnly": true
                },
                "details": {
                  "type": "string",
                  "example": "The domain name contains invalid characters",
                  "pattern": "^[\\s|\\S]*$",
                  "description": "A specific message about what is wrong with the field",
                  "readOnly": true
                }
              },
              "required": [
                "field",
                "details"
              ]
            },
            "description": "A detailed list of validation errors",
            "readOnly": true
          }
        }
      },
      "XxxAttributeDetails": {
        "type": "object",
        "required": [
          "type",
          "membershipId"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "xxx"
            ]
          },
          "membershipId": {
            "type": "string",
            "maxLength": 32,
            "pattern": "[a-zA-Z0-9]+"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AttributeDetails"
          }
        ]
      },
      "contactId": {
        "type": "string",
        "example": "1ZdMXpapqp9sle5dl8BlppTJXAzf5",
        "minLength": 27,
        "maxLength": 32,
        "pattern": "[a-zA-Z0-9]+",
        "description": "Contact ID"
      },
      "countryCode": {
        "type": "string",
        "example": "US",
        "minLength": 2,
        "maxLength": 2,
        "pattern": "^[A-Z]{2}$",
        "description": "Country code (ISO 3166-1 alpha-2)"
      },
      "domainName": {
        "type": "string",
        "example": "spaceship.com",
        "minLength": 4,
        "maxLength": 255,
        "format": "domain",
        "description": "Domain name in UTF-8 or ASCII format (U-label or A-label)"
      },
      "domainNameALabel": {
        "type": "string",
        "example": "xn--spceship-9ya.com",
        "minLength": 4,
        "maxLength": 255,
        "format": "domain",
        "description": "Domain name in ASCII format (A-label)"
      },
      "domainNameULabel": {
        "type": "string",
        "example": "spaceship.com",
        "minLength": 4,
        "maxLength": 255,
        "format": "domain",
        "description": "Domain name in UTF-8 format (U-label)"
      },
      "errorCode": {
        "type": "string",
        "maxLength": 255,
        "pattern": "^(business|application|infrastructure)(\\.[a-zA-Z]+)+$",
        "description": "The dot-separated error code indicating the type of the problem occurred"
      },
      "fqdn": {
        "type": "string",
        "example": "ns1.spaceship.dev",
        "minLength": 4,
        "maxLength": 255,
        "format": "hostname"
      },
      "host": {
        "type": "string",
        "example": "api.www",
        "minLength": 1,
        "maxLength": 255,
        "format": "hostname"
      },
      "hostNameValue": {
        "type": "string",
        "example": "@",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "[a-zA-Z\\-\\.@\\*]{1,255}"
      },
      "ipAddress": {
        "type": "string",
        "maxLength": 39,
        "format": "ip",
        "description": "An IP address represented as a string, which can be either IPv4 or IPv6 format."
      },
      "ipV4Address": {
        "type": "string",
        "example": "127.0.0.1",
        "maxLength": 15,
        "format": "ipv4",
        "description": "IPv4 address"
      },
      "ipV6Address": {
        "type": "string",
        "example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "maxLength": 39,
        "format": "ipv6",
        "description": "IPv6 address"
      },
      "language": {
        "type": "string",
        "example": "en",
        "minLength": 2,
        "maxLength": 2,
        "pattern": "[a-z]{2}",
        "description": "Language (iso 639)"
      },
      "operationId": {
        "type": "string",
        "maxLength": 16,
        "pattern": "^[a-z0-9]{16}$",
        "description": "16-characters unique identifier of the operation"
      },
      "phone": {
        "type": "string",
        "example": "+1.123456789",
        "minLength": 7,
        "maxLength": 17,
        "pattern": "^\\+\\d{1,3}\\.\\d{4,}$",
        "description": "Phone number"
      },
      "phoneExt": {
        "type": "string",
        "example": "256",
        "maxLength": 7,
        "pattern": "^\\d{0,7}$",
        "description": "Phone number extension"
      },
      "testFqdn": {
        "type": "string",
        "example": "ns1.spaceship.dev",
        "minLength": 4,
        "maxLength": 255,
        "format": "hostname"
      },
      "underscoredPort": {
        "type": "string",
        "example": "_8443",
        "minLength": 2,
        "maxLength": 6,
        "pattern": "^_(6[0-5]{2}[0-3][0-5]|[1-5]?([0-9]){2,4}|[1-9]?)$",
        "description": "A string that starts with an underscore and continues with a port number from 1 to 65535"
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for authenticating requests, with a set of scopes (permissions) defined by the user at the time of creation."
      },
      "apiSecret": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Secret",
        "description": "API secret for authenticating requests must be set together with the API key."
      }
    }
  },
  "x-scopes": {
    "domains:read": "Read domain information and check configuration",
    "domains:write": "Manage domains and domain settings",
    "domains:transfer": "Transfer domains in and out",
    "contacts:write": "Save contact details",
    "contacts:read": "Read contact details",
    "dnsrecords:write": "Write DNS resource records",
    "dnsrecords:read": "Read DNS resource records"
  }
}